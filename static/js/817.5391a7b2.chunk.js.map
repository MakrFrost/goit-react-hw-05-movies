{"version":3,"file":"static/js/817.5391a7b2.chunk.js","mappings":"6SAEMA,EAAU,+BACVC,EAAU,mCAEHC,EAAgB,mCAAG,oGACPC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,wCACqBC,IAFd,cACxBG,EADwB,yBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAa,mCAAG,WAAMC,GAAN,uFACJH,EAAAA,GAAAA,IAAA,UAAaH,EAAb,kBAA8BM,EAA9B,oBAA4CL,IADxC,cACrBM,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbC,EAAS,mCAAG,WAAMH,GAAN,uFACAH,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACDM,EADC,4BACqBL,EADrB,oBADA,cACjBG,EADiB,yBAIhBA,EAASI,KAAKE,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAML,GAAN,uFACHH,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACDM,EADC,4BACqBL,EADrB,oBADG,cACpBG,EADoB,yBAInBA,EAASI,KAAKI,SAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMC,GAAN,uFACNX,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iCACcC,EADd,kBAC+Ba,EAD/B,8CADM,cACvBV,EADuB,yBAItBA,EAASI,KAAKI,SAJQ,2CAAH,qD,oHC7Bb,SAASG,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAC9B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,kBAAMC,SAhBa,SAAAC,GACnBA,EAAMC,iBAEe,KAAjBJ,EAAMK,QAKVP,EAASE,GACTC,EAAS,KALPK,MAAM,+BAMT,EAMC,WACE,mBAAQC,KAAK,SAAb,0BAEA,kBACEA,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,SAbgB,SAAAR,GACpBF,EAASE,EAAMS,cAAcZ,MAAMa,cACpC,EAYKb,MAAOA,MAId,C,aCOD,EAnCc,WACZ,OAAwBD,EAAAA,EAAAA,UAAS,IAAjC,eAAOe,EAAP,KAAaC,EAAb,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAajB,OAPAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRzB,EAAK,UAAGqB,EAAYK,IAAI,gBAAnB,QAA+B,GACtC1B,GACF2B,EAAAA,GAAoB3B,GAAO4B,KAAKT,EAEnC,GAAE,CAACE,KAGF,iCACE,SAAC,EAAD,CAAanB,SAbE,SAAAE,GACjBkB,EAAe,CAAEtB,MAAOI,GACzB,IAaIc,EAAKW,OAAS,GACb,gBAAKC,UAAU,aAAf,SACGZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,MAAOxC,EAAV,EAAUA,GAAV,OACR,SAAC,KAAD,CAAeyC,GAAE,UAAKzC,GAAM0C,MAAO,CAAEC,KAAMZ,GAA3C,SACGS,GADQxC,EADH,OAOZ,+CAIP,C","sources":["components/API/FilmsAPI.jsx","components/SearchMovie/SearchMovie.jsx","components/Movie/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab5292459fe4dd5c494b0166be76ca45';\n\nexport const getTrandingFilms = async () => {\n  const responce = await axios.get(\n    `${API_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return responce;\n};\n\nexport const fetchFilmById = async id => {\n  const response = await axios.get(`${API_URL}/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const responce = await axios.get(\n    `${API_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const responce = await axios.get(\n    `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieQuery = async query => {\n  const responce = await axios.get(\n    `${API_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=true`\n  );\n  return responce.data.results;\n};\n","import { useState } from 'react';\n\nexport default function Movie({ onSearch }) {\n  const [value, setValue] = useState('');\n\n  const submitOnForm = event => {\n    event.preventDefault();\n\n    if (value.trim() === '') {\n      alert('Write field to search films!');\n      return;\n    }\n\n    onSearch(value);\n    setValue('');\n  };\n  const onInputChange = event => {\n    setValue(event.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <form onSubmit={submitOnForm}>\n      <button type=\"submit\"> Find film!</button>\n\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films\"\n        onChange={onInputChange}\n        value={value}\n      />\n    </form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\n\nimport SearchMovie from '../SearchMovie/SearchMovie';\nimport * as API from '../API/FilmsAPI';\n\nconst Movie = () => {\n  const [film, setFilm] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams();\n  const location = useLocation();\n\n  const searchFilm = value => {\n    setSearchParam({ query: value });\n  };\n\n  useEffect(() => {\n    const query = searchParam.get('query') ?? '';\n    if (query) {\n      API.fetchMovieQuery(query).then(setFilm);\n    }\n  }, [searchParam]);\n\n  return (\n    <>\n      <SearchMovie onSearch={searchFilm} />\n\n      {film.length > 0 ? (\n        <div className=\"wrap-films\">\n          {film.map(({ title, id }) => (\n            <Link key={id} to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          ))}\n        </div>\n      ) : (\n        <p>Enter movie name.</p>\n      )}\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["API_URL","API_KEY","getTrandingFilms","axios","responce","fetchFilmById","id","response","data","fetchCast","cast","fetchReviews","results","fetchMovieQuery","query","Movie","onSearch","useState","value","setValue","onSubmit","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","film","setFilm","useSearchParams","searchParam","setSearchParam","location","useLocation","useEffect","get","API","then","length","className","map","title","to","state","from"],"sourceRoot":""}