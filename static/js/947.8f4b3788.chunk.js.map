{"version":3,"file":"static/js/947.8f4b3788.chunk.js","mappings":"6SAEMA,EAAU,+BACVC,EAAU,mCAEHC,EAAgB,mCAAG,oGACPC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,wCACqBC,IAFd,cACxBG,EADwB,yBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAa,mCAAG,WAAMC,GAAN,uFACJH,EAAAA,GAAAA,IAAA,UAAaH,EAAb,kBAA8BM,EAA9B,oBAA4CL,IADxC,cACrBM,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbC,EAAS,mCAAG,WAAMH,GAAN,uFACAH,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACDM,EADC,4BACqBL,EADrB,oBADA,cACjBG,EADiB,yBAIhBA,EAASI,KAAKE,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAML,GAAN,uFACHH,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACDM,EADC,4BACqBL,EADrB,oBADG,cACpBG,EADoB,yBAInBA,EAASI,KAAKI,SAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMC,GAAN,uFACNX,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iCACcC,EADd,kBAC+Ba,EAD/B,8CADM,cACvBV,EADuB,yBAItBA,EAASI,KAAKI,SAJQ,2CAAH,qD,uFCnBtBG,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAqDrB,UAnDqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAkBR,GAASS,KAAKL,EACjC,GAAE,CAACJ,IAEJ,IAAMU,EAAO,oBAAGL,EAASM,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAExC,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIH,EAAV,kBACCP,IACC,iBAAKW,UAAU,OAAf,WACE,yBACGX,EAAKY,aACJ,gBACEC,IAAG,0CAAqCb,EAAKY,aAC7CE,IAAKd,EAAKe,SAGZ,gBACEF,IAAG,8CACHC,IAAKd,EAAKe,WAIhB,4BACE,wBAAKf,EAAKe,SACV,wCAAoC,GAApBf,EAAKgB,aAArB,SACA,sCACA,uBAAIhB,EAAKiB,YACT,oCACA,uBAAIjB,EAAKkB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAIpD,oDACA,SAAC,KAAD,CAASZ,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,SAAZ,sBAEA,UAAC,KAAD,YACE,SAAC,KAAD,CAAOa,KAAK,OAAOC,SAAS,SAAC9B,EAAD,CAAMT,GAAIY,OACtC,SAAC,KAAD,CAAO0B,KAAK,SAASC,SAAS,SAAC5B,EAAD,CAASX,GAAIY,WAIlD,C","sources":["components/API/FilmsAPI.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab5292459fe4dd5c494b0166be76ca45';\n\nexport const getTrandingFilms = async () => {\n  const responce = await axios.get(\n    `${API_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return responce;\n};\n\nexport const fetchFilmById = async id => {\n  const response = await axios.get(`${API_URL}/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const responce = await axios.get(\n    `${API_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const responce = await axios.get(\n    `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieQuery = async query => {\n  const responce = await axios.get(\n    `${API_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=true`\n  );\n  return responce.data.results;\n};\n","import {\n  Route,\n  Routes,\n  NavLink,\n  Link,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\nimport { useEffect, useState, lazy } from 'react';\n\nimport * as API from '../API/FilmsAPI';\n\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    API.fetchFilmById(movieId).then(setFilm);\n  }, [movieId]);\n\n  const backBtn = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Link to={backBtn}>Back</Link>\n      {film && (\n        <div className=\"wrap\">\n          <div>\n            {film.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n                alt={film.title}\n              />\n            ) : (\n              <img\n                src={`https://tl.rulate.ru/i/book/19/10/18925.jpg`}\n                alt={film.title}\n              />\n            )}\n          </div>\n          <div>\n            <h1>{film.title}</h1>\n            <p>User score: {film.vote_average * 10} %</p>\n            <h2>Overwiev</h2>\n            <p>{film.overview}</p>\n            <h3>Genres</h3>\n            <p>{film.genres.map(genre => genre.name).join(', ')}</p>\n          </div>\n        </div>\n      )}\n      <h3>Additional information</h3>\n      <NavLink to=\"cast\">Cast</NavLink>\n      <NavLink to=\"review\">Reviews</NavLink>\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast id={movieId} />} />\n        <Route path=\"review\" element={<Reviews id={movieId} />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_URL","API_KEY","getTrandingFilms","axios","responce","fetchFilmById","id","response","data","fetchCast","cast","fetchReviews","results","fetchMovieQuery","query","Cast","lazy","Reviews","movieId","useParams","useState","film","setFilm","location","useLocation","useEffect","API","then","backBtn","state","from","to","className","poster_path","src","alt","title","vote_average","overview","genres","map","genre","name","join","path","element"],"sourceRoot":""}